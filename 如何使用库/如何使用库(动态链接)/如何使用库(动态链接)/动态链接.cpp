#include<iostream>
#include<GLFW/glfw3.h>
//该头文件同时支持静态和动态链接

//动态链接是发生在运行时，静态链接是在编译时发生的。当你编译一个静态库时，将其链接到可执行文件，也就是应用程序，或链接到一个动态库
//静态链接运行更多优化的发生

int main()
{
	int a = glfwInit();
	std::cout << a << std::endl;

	std::cin.get();
}

//本例中使用动态链接是在静态链接的基础上进行替换
//替换为动态链接：1.右击属性->链接器->输入->将在静态链接时附加依赖项中添加的glfw3.lib删除
	//注意在Dependencies\GLFW\lib-vc2022目录下glfw.dll与glfw3dll.lib是直接相关(编译时同时运行)的，你不能把他们分开
//2.在删除后在附加依赖项中添加glfw3dll.lib
//这时直接运行会显示找不到glfw3.dll文件而报错
//3.最简单的做法时将dll问价放置在可执行文件一起，同样的位置


//我们要确保在一个可访问的地方有dll文件。你可以在整个应用程序中，设置库搜索位置
//但是，可执行文件的根目录下，也就是包含你的程序的目录，是一种自动搜索路径，如果你把他们放到同一个文佳夹里(即把dll文件放到可执行文件的同一个文佳夹里)