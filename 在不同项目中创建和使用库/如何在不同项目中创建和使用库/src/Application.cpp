/*引用头文件的方法*/
//#include"../../Engine/src/Engine.h"// "../"返回到上一级目录
//方法一:用一个相对引用来引用头文件，但这样一旦移动文件或重命名项目名之类的，一切都会崩溃

#include"Engine.h"//因为包含在里面所以也可以用<>来包含

//方法二：绝对引用方法:使用编译器的包含路径
//右击Game->属性->C/C++->常规->附加包含目录->$(SolutionDir)Engine\src;

//一般我包含头文件的习惯是包含VS解决方案之外的东西，可以使用<>,也就是一些完全与项目无关的外部依赖项
//如果这个engine.h的代码实际上是这个解决方案中找到的，具体说是我在这个解决方案中写的东西，而不是像C++标准库那我，我将使用引号来表明这是我们的源文件之一


//这时点运行会发现已经生成了lib文件，这是我们想要的链接，这时我们可以将其添加到链接器的输入里。
//但实际上我们不需要这么做，VS实际上可以为我们自动化做这个，因为这个项目是在实际的解决方案中
//现在我们需要做的是：右击Game->添加->引用->将解决方案中的Engine.h勾选上。这样就链接到可执行文件了，就像我们将其添加到链接器中一样
//好处是除了不需要处理链接设置输入文件之外，还有就是即使重命名或修改也会自动化的修改，还可为我们创建一个完美的关系图(如运行的和这个是先调用到Engine，再构建Game，因为Game引用了Engine)

#include<iostream>

int main ( )
{
	engine::PrintMessage ( );
	std::cin.get();
}