#include "pch.h"

int main()
{
	std::cout << "Hello world" << std::endl;
}
//01.486s

//设置预处理方法：右击项目->属性->C/C++->预处理器->预处理到文件->将否(NO)改为是(yes)
/*运行后，可以在文件中找到Main.i，打开会发现这里有40万行代码，这就是每次都要重新编译的内容，为了避免每次编译多个cpp都要编译40万行代码，我们需要使用预编译头文件 */

//对于VStudio,第一，我们需要首先创建一个.cpp(pch.cpp)的文件，
//第二，右击该cpp文件属性->C/C++->预编译头->将预编译头右侧改为创建(creat)
//第三，右击整个项目属性->C/C++->预编译头->将预编译头右侧改为使用(use),然后将下面的预编译头文件填写pcg.h(你要预编译的头文件)

/*查看编译时长*/
//点击工具选项卡选项->项目与解决方案->VC++项目设置->将生成计时设置为是(yes),清理一下项目，然后build

/*对比*/
//将该项目预编译头设置为不使用，注意也要将该项目属性预编译器下的预处理文文件设置为否(NO)，否则可能会build失败

//预编译前: 2305 毫秒
// 将预编译头改为使用后
//预编译后: 1298 毫秒




//precompiled header预编译头文件,预编译的头文件实际上是让你抓取一堆头文件，并将它们转换成编译器可以使用的格式，而不必一遍又一遍地读取这些头文件
/*例如，大量使用的标准模板库，如vector、string、std::cout等等，它们是由头文件组成的，因为它们是模板，必须在头文件中定义，如每次在C++文件中定义#include<vector>，他需要读取整个vector头文件并编译它。不仅如此，vector还包含一堆其他的包含文件，这些一样需要读取
预编译器必须把所有这些复制到这个vector文件，这就有上十万行代码了，它们需要解析，并以某种形式标记并编译，在你想要编译main文件之前，因为如果你的main包含vector，vector必须复制并粘贴到main文件中，然后是整个代码，所有代码每次都需要被解析和编译。如果你的项目中包含很多cpp，
很多地方都要包含include<vector>,显然，它们会被单独包含在每个文件中因为这是编译器的工作方式。
每一个翻译单元都是单独编译的，然后再进行链接，把所有的东西链接在一起。
总之，每次你对C++文件进行修改，整个文件都要重新编译，从头开始重新解析并重新编译，这可能只是因为你添加了一个空行或类似的东西，这意味着你的编译时间将比潜在的要长得多。不仅如此，考虑到你的项目中有多个C++文件，它们都包含了vector,你不得不持续解析同样的代码，一遍又一遍对你
实际要编译的每个翻译单元，每个cpp文件，每一次都是如此，这需要时间，所以你可以用一个叫做预编译头文件的东西来代替 */

/*预编译头文件的作用是接受一堆你告诉它要接受的头文件，基本上是一堆代码，它只编译一次，它以二进制格式存储，这对编译器来说比单纯的文本处理要快得多，因为它已经处于一种过去的状态，而且是二进制的，不是文本的。这样就可以了，每次你包含了预编译的头文件，它就已经有了你所需要的一切 */
/*这意味着它会大大加快你的编译时间，你的项目编译起来会快很多倍，特别是你的项目越来越大，你会有越来越多的C++文件，越来越多的头文件，诸如此类你可以在预编译头文件中添加更多东西，你也有更多使用了共同头文件的源文件需要编译，它会指数级地更加快速 */

/*预编译头文件本质上还是头文件，它包括一堆其他头文件，如果你把所有东西都放到那个pch里，编译速度虽然会变快。而这些东西会变化，因为我们在实际处理项目，所以它很可能会变化，显然必须重新构建预编译头文件，而这需要花费时间，这可能导致编译速度变慢。
/*因此，不要将频繁更改的文件放到预编译头文件中。
/*它很有用，而且可以把你自己的项目文件放进去也没有问题，比如log.h，它不会改变，我只会写一次，不需要不断往里面添加东西。如果要改变就不要把它放到pch中，否则这意味着每次都要从头开始构建，所以不要把它放进去*/

/*预编译头文件真正有用的是外部依赖，本质上它主要用于不是你写的代码，比如stl，标准模板库或C++库中的代码，又或者是windows api,如果你想要包含Windows.h(这是一个巨大的头文件，他包含了超级多的其他头文件)，你不会修改windows.h,你不h修改标准模板库，所以它应该在预编译头文件中，
因为它可能有比实际应用程序的代码多很多倍。你需要考虑你的代码永远不会碰到的东西，如标准模板库、windows.h等，把它们放到预编译头文件中就可以不管了。首先，你可以在每个cpp文件中得到所有的东西,如果想要使用智能指针的话也不需要实际包含memory等等，因为它们都在pch,而pch被包含在每个你写的cpp文件中，
你可以很方便的使用它们，这会让一切都变得很快*/

